var searchIndex = JSON.parse('{\
"actix":{"doc":"","t":[0,0,0,5,0,3,12,11,11,11,5,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,12,11,11,11,11,11,3,17,3,3,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["airline","hotel","info_flight","main","stats_actor","Airline","addr_statistics","borrow","borrow_mut","from","from_file","handle","into","try_from","try_into","type_id","vzip","Hotel","addr_statistics","borrow","borrow_mut","from","handle","into","try_from","try_into","type_id","vzip","InfoFlight","borrow","borrow_mut","clone","clone_into","flight_reservation","from","into","start_time","to_owned","try_from","try_into","type_id","vzip","FinishMessage","STATS_FREQUENCY","Stat","StatsActor","add_stat","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","destinations","elapsed_time","flight_reservation","flights","from","from","from","get_avg_time","get_sum_time","get_top_destinations","get_total_count","handle","handle","into","into","into","new","print_operational_stats","print_top_routes","sum_time","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["actix","","","","","actix::airline","","","","","","","","","","","","actix::hotel","","","","","","","","","","","actix::info_flight","","","","","","","","","","","","","","actix::stats_actor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Handle airlines config","Handle airlines config","","","","WebServer actor airline","","","","","Create a Airline Server for each available airline in …","Handle the message of InfoFlight and simulates to send it …","","","","","","","","","","","Handle the message of InfoFlight and simulates to send it …","","","","","","Message made to a Actor Airline or Hotel to start the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,4,4,5,6,4,5,6,4,5,5,4,4,5,6,4,4,4,4,4,4,4,5,6,4,4,4,4,4,5,6,4,5,6,4,5,6,4,5,6],"f":[null,null,null,[[]],null,null,null,[[]],[[]],[[]],[[["addr",3,["statsactor"]],["str",15],["statsactor",3]],[["string",3],["addr",3,["airline"]],["hashmap",3,["string","addr"]]]],[[["infoflight",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[["infoflight",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[]],null,[[]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[["u128",15],["string",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[],["f64",15]],[[],["i64",15]],[[["usize",15]],["vec",3]],[[],["i64",15]],[[["finishmessage",3]]],[[["stat",3]]],[[]],[[]],[[]],[[],["statsactor",3]],[[]],[[["usize",15]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"Airline"],[3,"Hotel"],[3,"InfoFlight"],[3,"StatsActor"],[3,"Stat"],[3,"FinishMessage"]]},\
"alglobo":{"doc":"","t":[17,17,0,0,0,0,0,5,0,0,3,6,17,11,11,11,5,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,3,12,11,11,11,11,11,12,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,3,11,11,11,5,11,11,11,11,11,11,11,11,11,17,5,5,3,3,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,17,5,5],"n":["AIRLINES_FILE","RATE_LIMITING_DEFAULT","airlines","flight","flight_reservation","hotel","logger","main","statsactor","utils","Airline","Airlines","DEFAULT_RETRY_SECONDS","borrow","borrow_mut","from","from_file","handle","into","into_request","round_from","round_into","try_from","try_into","type_id","vzip","InfoFlight","addr_statistics","borrow","borrow_mut","clone","clone_into","flight_reservation","from","into","into_request","round_from","round_into","start_time","to_owned","try_from","try_into","type_id","vzip","FlightReservation","airline","borrow","borrow_mut","clone","clone_into","deserialize","destination","from","get_route","hotel","id","into","into_request","origin","round_from","round_into","to_owned","to_string","try_from","try_into","type_id","vzip","Hotel","borrow","borrow_mut","from","get_hotel_address","handle","into","into_request","round_from","round_into","try_from","try_into","type_id","vzip","FILENAME","log","log_init","Stat","StatsActor","add_stat","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","destinations","elapsed_time","flight_reservation","flights","from","from","get_avg_time","get_sum_time","get_top_destinations","get_top_destinations_str","get_total_count","handle","into","into","into_request","into_request","print_stat","round_from","round_from","round_into","round_into","sum_time","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","IS_HOTEL","process_flights","read_file"],"q":["alglobo","","","","","","","","","","alglobo::airlines","","","","","","","","","","","","","","","","alglobo::flight","","","","","","","","","","","","","","","","","","alglobo::flight_reservation","","","","","","","","","","","","","","","","","","","","","","","alglobo::hotel","","","","","","","","","","","","","","alglobo::logger","","","alglobo::statsactor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","alglobo::utils","",""],"d":["","","Handle airlines config","","Flight Reservations Struct","Handle airlines config","","","","Helper Functions","WebServer actor airline","","","","","","Create a Airline Server for each available airline in …","Handle the message of InfoFlight and simulates to send it …","","","","","","","","","Message made to a Actor Airline to start the request of …","","","","","","","","","","","","","","","","","","Struct","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates one Hotel Server which allows <code>rate_limite</code> amount …","Handle the message of InfoFlight and simulates to send it …","","","","","","","","","","","","","Actor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Read CSV file with all the flights requests and return a …","Read CSV file and return split content"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,4,4,4,0,4,4,4,4,4,4,4,4,4,0,0,0,0,0,5,6,5,6,5,5,5,5,6,6,5,6,5,5,5,5,5,5,5,6,5,6,5,5,6,5,6,5,5,5,6,5,6,5,6,5,6,5,0,0,0],"f":[null,null,null,null,null,null,null,[[]],null,null,null,null,null,[[]],[[]],[[]],[[["str",15]],[["hashmap",3,["string","addr"]],["addr",3,["airline"]],["string",3]]],[[["infoflight",3]]],[[]],[[],["request",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["request",3]],[[]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["result",4]],null,[[]],[[],["string",3]],null,null,[[]],[[],["request",3]],null,[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[["usize",15]],[["addr",3,["hotel"]],["hotel",3]]],[[["infoflight",3]]],[[]],[[],["request",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["string",3]]],[[]],null,null,[[["u128",15],["string",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[],["f64",15]],[[],["i64",15]],[[["usize",15]],["vec",3]],[[["usize",15]],["string",3]],[[],["i64",15]],[[["context",3],["stat",3]]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[["str",15]],[["flightreservation",3],["vec",3,["flightreservation"]]]],[[["str",15]],[["box",3,["error"]],["result",4,["vec","box"]],["vec",3,["vec"]]]]],"p":[[3,"Airline"],[3,"InfoFlight"],[3,"FlightReservation"],[3,"Hotel"],[3,"StatsActor"],[3,"Stat"]]},\
"common":{"doc":"","t":[17,17,0,0,0,0,0,3,12,11,11,11,11,11,12,11,11,11,5,11,12,12,11,12,11,11,11,11,11,11,13,4,6,13,11,11,11,11,5,11,5,11,11,11,11,5,5,17,5,5],"n":["AIRLINES_FILE","TEST_FLIGHTS_FILE","flight_reservation","informe","logger","simulate_requests","utils","FlightReservation","airline","borrow","borrow_mut","clone","clone_into","deserialize","destination","fmt","fmt","from","from_file","get_route","hotel","id","into","origin","to_owned","to_string","try_from","try_into","type_id","vzip","INFO","LogLevel","LoggerMsg","TRACE","borrow","borrow_mut","fmt","from","init","into","log","try_from","try_into","type_id","vzip","simulate_airline","simulate_hotel","DEFAULT_RETRY_SECONDS","get_retry_seconds","read_file"],"q":["common","","","","","","","common::flight_reservation","","","","","","","","","","","","","","","","","","","","","","","common::logger","","","","","","","","","","","","","","","common::simulate_requests","","common::utils","",""],"d":["","","Flight Reservations Struct","Informe","","","Helper Functions","Struct","","","","","","","","","","","Read CSV file with all the flights requests and return a …","","","","","","","","","","","","","","","","","","","","","","","","","","","Simulated request to an hypothetical airline web server","Simulated request to an hypothetical hotel web server","If the user doesn’t set the ENVVAR <code>RETRY_SECONDS</code> we …","","Read CSV file and return split content"],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,2,0,0,2,2,2,2,2,0,2,0,2,2,2,2,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["str",15]],[["flightreservation",3],["vec",3,["flightreservation"]]]],[[],["string",3]],null,null,[[]],null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["loglevel",4],["string",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],[["result",4,["str"]],["str",15]]],[[]],null,[[],["u64",15]],[[["str",15]],[["vec",3,["vec"]],["result",4,["vec","box"]],["box",3,["error"]]]]],"p":[[3,"FlightReservation"],[4,"LogLevel"]]},\
"threads":{"doc":"AlGlobo - Simple HTTP server for reserving a flight","t":[3,0,12,0,11,11,11,11,11,11,11,11,0,12,5,11,3,0,12,11,11,11,11,11,11,11,11,6,5,5,5,5,5,5,17,17,5,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11],"n":["AppState","airlines","airlines","alglobo","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","keyboard","logger_sender","main","register","reservation","statistics","statistics","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Airlines","from_file","reserve","send_to_airline","send_to_hotel","simulate_airline","simulate_hotel","QUIT_COMMANDS","STAT_COMMANDS","keyboard_loop","Statistics","add_flight_reservation","borrow","borrow_mut","clone","clone_into","destinations","from","get_avg_time","get_sum_time","get_top_destinations","get_total_count","into","new","print_operational_stats","print_top_routes","sum_time","to_owned","try_from","try_into","type_id","vzip"],"q":["threads","","","","","","","","","","","","","","","","","","","","","","","","","","","threads::airlines","","threads::alglobo","","","","","threads::keyboard","","","threads::statistics","","","","","","","","","","","","","","","","","","","","",""],"d":["This is the shared state that will be shared across every …","Handle airlines config","","Make the reservations","","","","","","","","","","","The main function. It starts a thread for the keyboard …","","","Flight Stats","","","","","","","","","","Keep track of how many threads can each airline handle","Read from a CSV file with airlines and their max number …","We make a reservation by sending the request to the …","Function that makes the request to the airline","Function that makes the request to the hotel","Simulated request to an hypothetical airline web server","Simulated request to an hypothetical hotel web server","Possible command strings that trigger the exit action","Possible command strings that trigger the show stats …","Listents to <code>s</code> (show stats) and <code>q</code> (quit) commands","Entity that holds the statistics of the flights","Adds request time to the accumulated sum, and the flights …","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,0,1,2,1,2,1,2,1,2,0,1,0,2,0,0,1,1,2,1,2,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[["appservice",3]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[["str",15]],[["string",3],["arc",3,["semaphore"]],["hashmap",3,["string","arc"]]]],[[["flightreservation",3],["arc",3,["semaphore"]],["statistics",3],["loggermsg",6],["semaphore",3],["sender",3,["loggermsg"]]]],[[["flightreservation",3],["arc",3,["semaphore"]],["barrier",3],["arc",3,["barrier"]],["semaphore",3],["loggermsg",6],["sender",3,["loggermsg"]]]],[[["flightreservation",3],["barrier",3],["arc",3,["barrier"]],["loggermsg",6],["sender",3,["loggermsg"]]]],[[],[["result",4,["str"]],["str",15]]],[[]],null,null,[[["loggermsg",6],["statistics",3],["sender",3,["loggermsg"]]]],null,[[["string",3],["instant",3]]],[[]],[[]],[[]],[[]],null,[[]],[[],["f64",15]],[[],["i64",15]],[[["usize",15]],["vec",3]],[[],["i64",15]],[[]],[[],["statistics",3]],[[]],[[["usize",15]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"AppState"],[3,"reservation"],[3,"Statistics"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};